/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Views.QLKH;

import Models.KH_HoaDonViewModel;
import Services.KhachHangService;
import Services.UserService;
import Utils.SVGImage;
import Validator.MyValidate;
import ViewModels.KhachHangViewModel;
import Views.Login;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author X1
 */
public class QLKHACHHANG extends javax.swing.JInternalFrame {
    SVGImage svgSet = new SVGImage();
    KhachHangService khs = new KhachHangService();
    UserService uService = new UserService();

    /**
     * Creates new form KHACHHANG
     */
    public QLKHACHHANG() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        setButtonIcon();
        loadTableKH(khs.getList());
    }

    void setButtonIcon() {
        btnAdd.setIcon(svgSet.createSVGIcon("Images/SVG/add.svg", 15, 15));
        btnUpdate.setIcon(svgSet.createSVGIcon("Images/SVG/update.svg", 15, 15));
//        btnHidden.setIcon(svgSet.createSVGIcon("Images/SVG/w-view-fill.svg", 15, 15));
        btnExport.setIcon(svgSet.createSVGIcon("Images/SVG/pdf-color.svg", 15, 15));
    }

    void loadTableKH(ArrayList<KhachHangViewModel> ls) {
        DefaultTableModel model = (DefaultTableModel) tblKhachHang.getModel();
        model.setRowCount(0);
        int i = 1;
        for (KhachHangViewModel kh : ls) {
            model.addRow(new Object[]{
                i++, kh.getMaKH(), kh.getTenKH(), kh.getMaHD(), kh.getGioiTinh(), kh.getDiaChi(), kh.getSoDT(), kh.getNgaySinh()
            });
        }
    }

    //LOAD2
    void loadTable2(ArrayList<KH_HoaDonViewModel> ls) {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        int i = 1;
        for (KH_HoaDonViewModel kh : ls) {
            model.addRow(new Object[]{
                i++,
                kh.getMaHD(),
                kh.getTenKH(),
                kh.getTenSP(),
                kh.getDonGia(),
                kh.getSoLuong(),
                kh.getThanhTien(),
                kh.getNgayMua()
            });
        }
    }

    public Boolean validateTimKiem() {
        StringBuilder stb = new StringBuilder();
        MyValidate v = new MyValidate();

        v.isEmpty(txtSearch, stb, "Vui lòng nhập tên cần tìm");
        if (stb.length() > 0) {
            JOptionPane.showMessageDialog(this, stb);
            return false;
        } else {
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhachHang = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        cboSearch = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(1090, 630));
        setMinimumSize(new java.awt.Dimension(1090, 630));
        setPreferredSize(new java.awt.Dimension(1090, 630));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Khách Hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        tblKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã Khách Hàng", "Tên Khách Hàng", "Mã Hóa Đơn", "Địa Chỉ", "Số Điện Thoại"
            }
        ));
        tblKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhachHang);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 1040, 250));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lịch Sử Mua Hàng", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã Hóa Đơn", "Tên Khách Hàng", "Sản Phẩm", "Đơn Giá", "Số Lượng", "Tổng Tiền", "Ngày Mua"
            }
        ));
        jScrollPane2.setViewportView(tblHoaDon);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 1040, 220));

        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jPanel5.setAlignmentX(1.0F);
        jPanel5.setAlignmentY(1.0F);

        btnAdd.setText("THÊM");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });

        btnUpdate.setText("SỬA");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });

        btnDelete.setText("XÓA");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });

        btnExport.setText("EXPORT");
        btnExport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExportMouseClicked(evt);
            }
        });
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        cboSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất Cả" }));
        cboSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboSearchMouseClicked(evt);
            }
        });

        btnSearch.setText("SEARCH");
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSearchMouseClicked(evt);
            }
        });

        btnDelete1.setText("XEM");
        btnDelete1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDelete1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93)
                .addComponent(cboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1040, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        // TODO add your handling code here:
        QLKHACHHANG_add kh = new QLKHACHHANG_add();
        kh.setVisible(true);
    }//GEN-LAST:event_btnAddMouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        // UPDATE
        int pos = tblKhachHang.getSelectedRow();
        if (pos == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn khách hàng để cập nhật!", "POLYPOLO thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            QLKHACHHANG_update khUpdate = new QLKHACHHANG_update();
            khUpdate.setVisible(true);
            khUpdate.pack();

            Integer maKH = (Integer) tblKhachHang.getValueAt(pos, 1);
            khUpdate.txtMaKH.setText(String.valueOf(maKH.toString()));
            khUpdate.txtTenKH.setText((String) tblKhachHang.getValueAt(pos, 2));
            khUpdate.txtSDT.setText((String) tblKhachHang.getValueAt(pos, 6));
            khUpdate.txtDiaChi.setText((String) tblKhachHang.getValueAt(pos, 5));

            String trangT = (String) tblKhachHang.getValueAt(pos, 4);
            Date ngayN = khs.getLisstt(maKH).getNgaySinh();
            khUpdate.dcsNgaySinh.setDate(ngayN);
            if (trangT != null) {
                if ("Nam".equals(trangT)) {
                    khUpdate.rdoNam.setSelected(true);
                } else {
                    khUpdate.rdoNu.setSelected(true);
                }
            }
        }
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseClicked
        // TODO add your handling code here:
        if (validateTimKiem()) {
            if ("Tên".equals(cboSearch.getSelectedItem())) {
                String id = txtSearch.getText();
                ArrayList<KhachHangViewModel> ls = khs.getListSearch(id);
                loadTableKH(ls);
            } else if ("SĐT".equals(cboSearch.getSelectedItem())) {
                String sdt = txtSearch.getText();
                ArrayList<KhachHangViewModel> ls = khs.getListSearchSDT(sdt);
                loadTableKH(ls);
            }
        }
        txtSearch.setText("");
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnSearchMouseClicked

    private void cboSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboSearchMouseClicked
        // TODO add your handling code here:
        loadTableKH(khs.getList());
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_cboSearchMouseClicked

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        // DELETE
        int pos = tblKhachHang.getSelectedRow();
        if (pos == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn khách hàng để xóa!", "POLYPOLO thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
        int result = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa khách hàng không?", "POLYPOLO xác nhận", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            Integer ma = Integer.valueOf(tblKhachHang.getValueAt(tblKhachHang.getSelectedRow(), 1).toString());
            khs.XoaKH(ma);
            JOptionPane.showMessageDialog(this, "Xóa khách hàng thành công!", "POLYPOLO thông báo", 0);
            loadTableKH(khs.getList());
        } else {
            JOptionPane.showMessageDialog(this, "Đã hủy thao tác xóa khách hàng!", "POLYPOLO thông báo", 0);
        }
        }
    }//GEN-LAST:event_btnDeleteMouseClicked

    private void tblKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachHangMouseClicked
        // TCLICK
        int pos = tblKhachHang.getSelectedRow();
        KhachHangViewModel kh = khs.getList().get(pos);
        Integer maHD = Integer.valueOf(tblKhachHang.getValueAt(tblKhachHang.getSelectedRow(), 3).toString());
        loadTable2(khs.getList_Bang2(maHD));
    }//GEN-LAST:event_tblKhachHangMouseClicked

    private void btnDelete1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelete1MouseClicked
        // 
        int pos = tblKhachHang.getSelectedRow();
        if (pos == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn khách hàng để xem!", "POLYPOLO thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            QLKHACHHANG_view khXem = new QLKHACHHANG_view();
            khXem.setVisible(true);
            khXem.pack();

            Integer maKH = (Integer) tblKhachHang.getValueAt(pos, 1);
            khXem.txtMaKH.setText(String.valueOf(maKH.toString()));
            khXem.txtTenKH.setText((String) tblKhachHang.getValueAt(pos, 2));
            khXem.txtSDT.setText((String) tblKhachHang.getValueAt(pos, 6));
            khXem.txtDiaChi.setText((String) tblKhachHang.getValueAt(pos, 5));

            String trangT = (String) tblKhachHang.getValueAt(pos, 4);
            Date ngayN = khs.getLisstt(maKH).getNgaySinh();
            khXem.dcsNgaySinh.setDate(ngayN);
            if (trangT != null) {
                if ("Nam".equals(trangT)) {
                    khXem.rdoNam.setSelected(true);
                } else {
                    khXem.rdoNu.setSelected(true);
                }
            }

        }
    }//GEN-LAST:event_btnDelete1MouseClicked

    private void btnExportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExportMouseClicked
        // EXPORT
        try {
            XSSFWorkbook workBook = new XSSFWorkbook();
            XSSFSheet sheet = workBook.createSheet("Danh Sách Khách Hàng POLYPOLO");

            // Title Style
            XSSFRow titleRow = sheet.createRow(0);
            Cell titleCell = titleRow.createCell(0);
            titleCell.setCellValue("Danh Sách Khách Hàng POLYPOLO");
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 6));
            XSSFFont font = workBook.createFont();
            font.setFontHeightInPoints((short) 19);
            font.setBold(true);
            XSSFCellStyle titleStyle = workBook.createCellStyle();
            titleStyle.setFont(font);
            titleStyle.setAlignment(HorizontalAlignment.CENTER);
            titleStyle.setVerticalAlignment(VerticalAlignment.CENTER);
            titleCell.setCellStyle(titleStyle);

            // Date
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String currentDate = sdf.format(new Date());

            SimpleDateFormat sdfHrs = new SimpleDateFormat("HH:mm:ss");
            String currentTime = sdfHrs.format(new Date());

            XSSFRow dateRow = sheet.createRow(1);
            Cell dateCell = dateRow.createCell(0);
            dateCell.setCellValue("Ngày: " + currentDate + " | Giờ: " + currentTime);
            sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 6));
            XSSFCellStyle dateStyle = workBook.createCellStyle();
            dateStyle.setAlignment(HorizontalAlignment.RIGHT);
            dateCell.setCellStyle(dateStyle);

            // Header Style
            XSSFFont headerFont = workBook.createFont();
            headerFont.setBold(true);
            headerFont.setFontHeightInPoints((short) 11);

            XSSFCellStyle headerStyle = workBook.createCellStyle();
            headerStyle.setFont(headerFont);
            headerStyle.setAlignment(HorizontalAlignment.CENTER);

            // Adding Header
            XSSFRow headerRow = sheet.createRow(3);

            String[] headers = {"STT", "Mã Khách Hàng", "Tên Khách Hàng", "Giới Tính", "Địa chỉ", "SĐT", "Ngày Sinh"};
            for (int i = 0; i < headers.length; i++) {
                Cell headerCell = headerRow.createCell(i, CellType.STRING);
                headerCell.setCellValue(headers[i]);
                headerCell.setCellStyle(headerStyle);
            }

            // Adding Data
            ArrayList<KhachHangViewModel> ls = khs.getList();
            for (int i = 0; i < ls.size(); i++) {
                KhachHangViewModel khachHang = ls.get(i);
                XSSFRow dataRow = sheet.createRow(4 + i);

                for (int j = 0; j < headers.length; j++) {
                    Cell dataCell = dataRow.createCell(j, CellType.STRING);
                    switch (j) {
                        case 0:
                            dataCell.setCellValue(i + 1);
                            break;
                        case 1:
                            dataCell.setCellValue("KH" + khachHang.getMaKH());
                            break;
                        case 2:
                            dataCell.setCellValue(khachHang.getTenKH());
                            break;
                        case 3:
                            dataCell.setCellValue(khachHang.getGioiTinh());
                            break;
                        case 4:
                            dataCell.setCellValue(khachHang.getDiaChi());
                            break;
                        case 5:
                            dataCell.setCellValue(khachHang.getSoDT());
                            break;
                        case 6:
                            // Định dạng lại ngày sinh
                            Cell dateOfBirthCell = dataRow.createCell(j, CellType.STRING);
                            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                            dateOfBirthCell.setCellValue(dateFormat.format(khachHang.getNgaySinh()));
                            break;
                        default:
                            break;
                    }
                }
            }

            // Auto adjust column widths
            for (int i = 0; i < headers.length; i++) {
                sheet.autoSizeColumn(i);
            }

            // Footer Style
            XSSFCellStyle footerStyle = workBook.createCellStyle();
            footerStyle.setFont(headerFont);
            footerStyle.setAlignment(HorizontalAlignment.LEFT);

            // Adding Footer
            int lastRow = 4 + ls.size();
            XSSFRow footerRow = sheet.createRow(lastRow +1);

            Cell footerCell1 = footerRow.createCell(1);
            footerCell1.setCellValue("Tổng Khách Hàng:");
            footerCell1.setCellStyle(footerStyle);

            Cell footerCell2 = footerRow.createCell(2);
            footerCell2.setCellValue(ls.size());
            footerCell2.setCellStyle(footerStyle);

            Cell userCell1 = footerRow.createCell(5);
            userCell1.setCellValue("Người Xuất:");
            userCell1.setCellStyle(footerStyle);

            Cell userCell2 = footerRow.createCell(6);
            userCell2.setCellValue(uService.getName(Login.dataStatic));
            userCell2.setCellStyle(footerStyle);

            // File Saving
            JFileChooser fileChooser = new JFileChooser("D:\\");
            fileChooser.setDialogTitle("Chọn nơi lưu file");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "xlsx", "xls");
            fileChooser.addChoosableFileFilter(filter);

            int userSelection = fileChooser.showSaveDialog(null);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();
                String filePath = fileToSave.getAbsolutePath();
                if (!filePath.endsWith(".xlsx")) {
                    filePath += ".xlsx";
                }

                try (FileOutputStream fos = new FileOutputStream(filePath)) {
                    workBook.write(fos);
                    JOptionPane.showMessageDialog(null, "Đã in danh sách thành công!", "POLYPOLO thông báo", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Thao tác đã bị hủy!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnExportMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblHoaDon;
    public javax.swing.JTable tblKhachHang;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
