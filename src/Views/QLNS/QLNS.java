/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Views.QLNS;

import Services.NhanSuService;
import Services.UserService;
import Utils.SVGImage;
import Validator.MyValidate;
import ViewModels.NhanSuViewModel;
import Views.Login;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author X1
 */
public class QLNS extends javax.swing.JInternalFrame {
    SVGImage svgSet = new SVGImage();
    NhanSuService nssv = new NhanSuService();
    UserService uService = new UserService();
    /**
     * Creates new form QLNS
     */
    public QLNS() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        setButtonIcon();
    }

    void setButtonIcon() {
        btnAdd.setIcon(svgSet.createSVGIcon("Images/SVG/add.svg", 15, 15));
        btnUpdate.setIcon(svgSet.createSVGIcon("Images/SVG/update.svg", 15, 15));
        btnExport.setIcon(svgSet.createSVGIcon("Images/SVG/pdf-color.svg", 15, 15));
    }
    
    public void fillToTable(ArrayList<NhanSuViewModel> lssanpham) {
        DefaultTableModel model = (DefaultTableModel) tblNhanSu.getModel();
        model.setRowCount(0);
        for (NhanSuViewModel sp : lssanpham) {
            model.addRow(new Object[]{
                sp.getMaNhanVien(),
                sp.getTenNhanVien(),
                sp.getTenNguoiDung(),
                sp.getVaiTro(),
                sp.getGioiTinh(),
                sp.getNgayS(),
                sp.getSoDienThoai(),
                sp.getDiaChi(),});
        }
    }

    public Boolean validateTimKiem() {
        StringBuilder stb = new StringBuilder();
        MyValidate v = new MyValidate();

        v.isEmpty(txtSearch, stb, "Vui lòng nhập tên cần tìm");
        if (stb.length() > 0) {
            JOptionPane.showMessageDialog(this, stb);
            return false;
        } else {
            return true;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        cboSearch = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        btnXem = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhanSu = new javax.swing.JTable();

        setMaximumSize(new java.awt.Dimension(1090, 630));
        setMinimumSize(new java.awt.Dimension(1090, 630));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        jPanel5.setAlignmentX(1.0F);
        jPanel5.setAlignmentY(1.0F);

        btnAdd.setText("THÊM");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });

        btnUpdate.setText("SỬA");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });

        btnDelete.setText("XÓA");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });

        btnExport.setText("EXPORT");
        btnExport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExportMouseClicked(evt);
            }
        });
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        cboSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất Cả" }));
        cboSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboSearchMouseClicked(evt);
            }
        });

        jButton4.setText("SEARCH");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        btnXem.setText("XEM");
        btnXem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnXemMouseClicked(evt);
            }
        });
        btnXem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(btnXem, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addComponent(cboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1040, 60));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Nhân Sự", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N

        tblNhanSu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã NV", "Tên Nhân Viên", "Tài Khoản", "Vai Trò", "Giới Tính", "Số Điện Thoại", "Địa Chỉ"
            }
        ));
        jScrollPane1.setViewportView(tblNhanSu);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 1030, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        // ADD
        QLNS_add add = new QLNS_add();
        add.setVisible(true);
    }//GEN-LAST:event_btnAddMouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        // UPDATE
        int pos = tblNhanSu.getSelectedRow();
        if (pos == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn nhân viên để cập nhật!", "POLYPOLO thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            QLNS_update nsUPdate = new QLNS_update();
            nsUPdate.setVisible(true);
            nsUPdate.pack();

            Integer maNS = (Integer) tblNhanSu.getValueAt(pos, 0);
            nsUPdate.txtMa.setText(String.valueOf(maNS.toString()));
            nsUPdate.txtTen.setText((String) tblNhanSu.getValueAt(pos, 1));
            nsUPdate.txtSDT.setText((String) tblNhanSu.getValueAt(pos, 6));
            nsUPdate.txtDiaChi.setText((String) tblNhanSu.getValueAt(pos, 7));

            String GioiT = (String) tblNhanSu.getValueAt(pos, 4);
            Date ngayN = nssv.NSByID(maNS).getNgayS();
            nsUPdate.dscNgayS.setDate(ngayN);
            if (GioiT != null) {
                if ("Nam".equals(GioiT)) {
                    nsUPdate.rdoNam.setSelected(true);
                } else {
                    nsUPdate.rdoNu.setSelected(true);
                }
            }

        }
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        // DEL
        int pos = tblNhanSu.getSelectedRow();
        if (pos == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn nhân viên để xóa!", "POLYPOLO thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            Integer maNS = (Integer) tblNhanSu.getValueAt(pos, 0);
            String kq = nssv.delete(maNS);
            JOptionPane.showMessageDialog(this, kq);
            fillToTable(nssv.getList());
        }
    }//GEN-LAST:event_btnDeleteMouseClicked

    private void btnXemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXemActionPerformed

    private void btnXemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXemMouseClicked
        // VIEW
        int pos = tblNhanSu.getSelectedRow();
        NhanSuViewModel ns = new NhanSuViewModel();
        if (pos == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn nhân viên để cập nhật!", "POLYPOLO thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            QLNS_view nsUPdate = new QLNS_view();
            nsUPdate.setVisible(true);
            nsUPdate.pack();

            Integer maNS = (Integer) tblNhanSu.getValueAt(pos, 0);
            nsUPdate.txtMa.setText(String.valueOf(maNS.toString()));
            nsUPdate.txtTen.setText((String) tblNhanSu.getValueAt(pos, 1));
            nsUPdate.txtTenTK.setText((String) tblNhanSu.getValueAt(pos, 2));
            String vaiTro = (String) tblNhanSu.getValueAt(pos, 3);
            nsUPdate.txtSDT.setText((String) tblNhanSu.getValueAt(pos, 6));
            nsUPdate.txtDiaChi.setText((String) tblNhanSu.getValueAt(pos, 7));
            String GioiT = (String) tblNhanSu.getValueAt(pos, 4);
            Date ngayN = nssv.NSByID(maNS).getNgayS();
            nsUPdate.dscNgayS.setDate(ngayN);
            if (GioiT != null) {
                if ("Nam".equals(GioiT)) {
                    nsUPdate.rdoNam.setSelected(true);
                } else {
                    nsUPdate.rdoNu.setSelected(true);
                }
            }
            if (vaiTro != null) {
                if ("Admin".equals(vaiTro)) {
                    nsUPdate.rdoAdmin.setSelected(true);
                } else {
                    nsUPdate.rdoStaff.setSelected(true);
                }
            }
        }
    }//GEN-LAST:event_btnXemMouseClicked

    private void cboSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboSearchMouseClicked
        // 
        fillToTable(nssv.getList());
    }//GEN-LAST:event_cboSearchMouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // SEARCH
        if (validateTimKiem()) {
            if ("Tên".equals(cboSearch.getSelectedItem())) {
                String id = txtSearch.getText();
                ArrayList<NhanSuViewModel> ls = nssv.searchByName(id);
                fillToTable(ls);
            } else if ("SĐT".equals(cboSearch.getSelectedItem())) {
                String sdt = txtSearch.getText();
                ArrayList<NhanSuViewModel> ls = nssv.searchSDT(sdt);
                fillToTable(ls);
            }
        }
        txtSearch.setText("");
    }//GEN-LAST:event_jButton4MouseClicked

    private void btnExportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExportMouseClicked
        // EXPORT
        try {
            XSSFWorkbook workBook = new XSSFWorkbook();
            XSSFSheet sheet = workBook.createSheet("Danh Sách khách hàng POLYPOLO");

            // Title Style
            XSSFRow titleRow = sheet.createRow(0);
            Cell titleCell = titleRow.createCell(0);
            titleCell.setCellValue("Danh Sách Nhân Viên POLYPOLO");
            sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 8));
            XSSFFont font = workBook.createFont();
            font.setFontHeightInPoints((short) 19);
            font.setBold(true);
            XSSFCellStyle titleStyle = workBook.createCellStyle();
            titleStyle.setFont(font);
            titleStyle.setAlignment(HorizontalAlignment.CENTER);
            titleStyle.setVerticalAlignment(VerticalAlignment.CENTER);
            titleCell.setCellStyle(titleStyle);

            // Date
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String currentDate = sdf.format(new Date());

            SimpleDateFormat sdfHrs = new SimpleDateFormat("HH:mm:ss");
            String currentTime = sdfHrs.format(new Date());

            XSSFRow dateRow = sheet.createRow(1);
            Cell dateCell = dateRow.createCell(0);
            dateCell.setCellValue("Ngày: " + currentDate + " | Giờ: " + currentTime);
            sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 8));
            XSSFCellStyle dateStyle = workBook.createCellStyle();
            dateStyle.setAlignment(HorizontalAlignment.RIGHT);
            dateCell.setCellStyle(dateStyle);

            // Header Style
            XSSFFont headerFont = workBook.createFont();
            headerFont.setBold(true);
            headerFont.setFontHeightInPoints((short) 11);

            XSSFCellStyle headerStyle = workBook.createCellStyle();
            headerStyle.setFont(headerFont);
            headerStyle.setAlignment(HorizontalAlignment.CENTER);

            // Adding Header
            XSSFRow headerRow = sheet.createRow(3);

            String[] headers = {"STT", "Mã Nhân Viên", "Tên Nhân Viên", "Tài Khoản", "Vai Trò", "Giới Tính", "Ngày Sinh", "SĐT", "Địa chỉ"};
            for (int i = 0; i < headers.length; i++) {
                Cell headerCell = headerRow.createCell(i, CellType.STRING);
                headerCell.setCellValue(headers[i]);
                headerCell.setCellStyle(headerStyle);
            }

            // Adding Data
            ArrayList<NhanSuViewModel> ls = nssv.getList();
            for (int i = 0; i < ls.size(); i++) {
                NhanSuViewModel khachHang = ls.get(i);
                XSSFRow dataRow = sheet.createRow(4 + i);

                for (int j = 0; j < headers.length; j++) {
                    Cell dataCell = dataRow.createCell(j, CellType.STRING);
                    switch (j) {
                        case 0:
                            dataCell.setCellValue(i + 1);
                            break;
                        case 1:
                            dataCell.setCellValue("NV" + khachHang.getMaNhanVien());
                            break;
                        case 2:
                            dataCell.setCellValue(khachHang.getTenNhanVien());
                            break;
                        case 3:
                            dataCell.setCellValue(khachHang.getTenNguoiDung());
                            break;
                        case 4:
                            dataCell.setCellValue(khachHang.getVaiTro());
                            break;
                        case 5:
                            dataCell.setCellValue(khachHang.getGioiTinh());
                            break;
                        case 6:
                            Cell dateOfBirthCell = dataRow.createCell(j, CellType.STRING);
                            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                            dateOfBirthCell.setCellValue(dateFormat.format(khachHang.getNgayS()));
                            break;
                        case 7:
                            dataCell.setCellValue(khachHang.getSoDienThoai());
                            break;
                        case 8:
                            dataCell.setCellValue(khachHang.getDiaChi());
                            break;
                        default:
                            break;
                    }
                }
            }

            for (int i = 0; i < headers.length; i++) {
                sheet.autoSizeColumn(i);
            }

            // Footer Style
            XSSFCellStyle footerStyle = workBook.createCellStyle();
            footerStyle.setFont(headerFont);
            footerStyle.setAlignment(HorizontalAlignment.LEFT);

            // Adding Footer
            int lastRow = 4 + ls.size();
            XSSFRow footerRow = sheet.createRow(lastRow + 1);

            Cell footerCell1 = footerRow.createCell(1);
            footerCell1.setCellValue("Tổng Nhân Viên:");
            footerCell1.setCellStyle(footerStyle);

            Cell footerCell2 = footerRow.createCell(2);
            footerCell2.setCellValue(ls.size());
            footerCell2.setCellStyle(footerStyle);

            Cell userCell1 = footerRow.createCell(7);
            userCell1.setCellValue("Người Xuất:");
            userCell1.setCellStyle(footerStyle);

            Cell userCell2 = footerRow.createCell(8);
            userCell2.setCellValue(uService.getName(Login.dataStatic));
            userCell2.setCellStyle(footerStyle);

            // File Saving
            JFileChooser fileChooser = new JFileChooser("D:\\");
            fileChooser.setDialogTitle("Chọn nơi lưu file");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "xlsx", "xls");
            fileChooser.addChoosableFileFilter(filter);

            int userSelection = fileChooser.showSaveDialog(null);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();
                String filePath = fileToSave.getAbsolutePath();
                if (!filePath.endsWith(".xlsx")) {
                    filePath += ".xlsx";
                }

                try (FileOutputStream fos = new FileOutputStream(filePath)) {
                    workBook.write(fos);
                    JOptionPane.showMessageDialog(null, "Đã in danh sách thành công!", "POLYPOLO thông báo", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Thao tác đã bị hủy!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnExportMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXem;
    private javax.swing.JComboBox<String> cboSearch;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNhanSu;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
